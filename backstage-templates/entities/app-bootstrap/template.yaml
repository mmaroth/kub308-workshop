apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Bootstrap applications/components
  name: bootstrap-app
  title: Zero to Flex Application Bootstrapper
  tags:
    - go
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Service Name
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the service
    
    - title: Repo Details
      required:
        - repoHost
      properties:
        repoHost:
          type: string
          description: "Gitea Repo base host name (Ex: cnoe.localtest.me)"
          default: cnoe.localtest.me
    
    - title: Choose Environments
      required:
        - envs
      properties:
        envs:
          type: array
          minItems: 0
          description: Choose one of more environments for deployment
          items:
            type: string
            enum:
              - dev
              - test
              - stage
              - prod
          default: dev
          uniqueItems: true
          ui:widget: checkboxes
        
  steps:
    - id: deploy-template
      name: Generating application deployment template
      action: fetch:template
      input:
        url: ./deploy
        targetPath: ./app-deploy
        values:
          name: ${{parameters.name}}
          repoHost: ${{parameters.repoHost}}
          envs: ${{parameters.envs}}
    
    - id: app-template
      name: Generating application code template
      action: fetch:template
      input:
        url: ./go-api
        targetPath: ./app
        values:
          name: ${{parameters.name}}
          repoHost: ${{parameters.repoHost}}
    
    - id: provisioner-template
      name: Generating application code template
      action: fetch:template
      input:
        url: ./provisioner
        targetPath: ./provisioner
        values:
          name: ${{parameters.name}}
          repoHost: ${{parameters.repoHost}}

    - id: publish-deploy-repo
      name: Publishing to a gitea deploy git repository
      action: publish:gitea
      input:
        description: This is an example app
        sourcePath: ./app-deploy
        repoUrl: ${{parameters.repoHost}}:443/gitea?repo=${{parameters.name}}-deploy
        defaultBranch: main
    
    - id: publish-app-repo
      name: Publishing to a gitea application git repository
      action: publish:gitea
      input:
        description: This is an example app
        sourcePath: ./app
        repoUrl: ${{parameters.repoHost}}:443/gitea?repo=${{parameters.name}}
        defaultBranch: main

    # - id: create-argocd-app
    #   name: Create ArgoCD App
    #   action: cnoe:create-argocd-app
    #   input:
    #     appName: ${{parameters.name}}
    #     appNamespace: ${{parameters.name}}
    #     argoInstance: in-cluster
    #     projectName: default
    #     repoUrl: https://cnoe.localtest.me:8443/gitea/giteaAdmin/${{parameters.name}}-deploy
    #     path: "helm"

    - id: create-provisioner-workflow
      name: Create Provisioner Workflow
      action: cnoe:kubernetes:apply
      input:
        namespaced: true
        manifestPath: ./provisioner/workflow.yaml
        clusterName: local
        values:
          name: ${{parameters.name}}
          repoHost: ${{parameters.repoHost}}
    
    # - id: run-provisioner-workflow
    #   name: Invoke Provisioner Workflow
    #   action: scaffolder:execute
    #   input:
    #     command: |
    #       curl -k -X POST "https://${{parameters.repoHost}}:8443/argo-events/${{parameters.name}}-provisioner" \
    #       -d '{ "commits": [ { "modified": ["provisioner.yaml"]}]}' \
    #       -H "Content-Type: application/json"

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-app-repo'].output.repoContentsUrl }}
        catalogInfoPath: 'catalog-info.yaml'

  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
